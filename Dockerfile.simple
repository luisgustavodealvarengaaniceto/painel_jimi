# Dockerfile alternativo para resolver problemas de permissões do Prisma
FROM node:20

# Instalar dependências de sistema
RUN apt-get update && apt-get install -y \
    curl \
    bash \
    postgresql-client \
    openssl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar arquivos de dependências
COPY package*.json ./
COPY backend/package*.json ./backend/

# Instalar dependências do frontend
RUN npm install

# Instalar dependências do backend
WORKDIR /app/backend
RUN npm install

# Voltar para raiz do projeto
WORKDIR /app

# Copiar todo o código
COPY . .

# Build do frontend
RUN npm run build

# Build do backend
WORKDIR /app/backend
RUN npm run build

# Gerar Prisma Client
ENV PRISMA_CLI_BINARY_TARGETS="native,linux-musl,debian-openssl-1.1.x,debian-openssl-3.0.x"
RUN npx prisma generate

# Voltar para raiz
WORKDIR /app

# Criar diretórios necessários
RUN mkdir -p /app/uploads /app/frontend

# Copiar frontend buildado para volume
RUN cp -r /app/dist/* /app/frontend/ 2>/dev/null || true

# Criar script de inicialização simplificado
RUN echo '#!/bin/bash\n\
set -e\n\
echo "🚀 JIMI IOT BRASIL - Iniciando aplicação..."\n\
\n\
# Aguardar PostgreSQL\n\
echo "⏳ Aguardando PostgreSQL..."\n\
for i in {1..30}; do\n\
    if pg_isready -h postgres -p 5432 -U painel_user; then\n\
        echo "✅ PostgreSQL está pronto!"\n\
        break\n\
    fi\n\
    echo "Tentativa $i/30..."\n\
    sleep 2\n\
done\n\
\n\
# Executar migrações\n\
cd /app/backend\n\
echo "📊 Executando migrações..."\n\
npx prisma db push --accept-data-loss || echo "⚠️ Migração falhou"\n\
\n\
# Configurar frontend\n\
echo "📁 Configurando frontend..."\n\
if [ ! -f "/app/frontend/index.html" ]; then\n\
    cp -r /app/dist/* /app/frontend/ 2>/dev/null || echo "⚠️ Falha na cópia"\n\
fi\n\
\n\
echo "🎉 Iniciando servidor..."\n\
exec node dist/app.js' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Expor porta
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3001/api/health || exit 1

CMD ["/entrypoint.sh"]