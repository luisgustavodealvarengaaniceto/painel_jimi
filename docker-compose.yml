services:
  # PostgreSQL Database - Container Independente
  postgres:
    image: postgres:15-alpine
    container_name: jimi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: painel_jimi
      POSTGRES_USER: painel_user
      POSTGRES_PASSWORD: JimiIOT2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jimi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U painel_user -d painel_jimi"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Permite conectar diretamente para manutenção
    ports:
      - "5433:5432"  # Porta externa diferente para evitar conflitos

  # Application - Container do Painel (Backend + Frontend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jimi-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://painel_user:JimiIOT2024@postgres:5432/painel_jimi
      - JWT_SECRET=jimi-iot-brasil-super-secure-secret-key-2024
      - PORT=3001
    volumes:
      - frontend_files:/app/frontend
      - app_logs:/app/logs  # Logs persistentes
    networks:
      - jimi-network
    depends_on:
      postgres:
        condition: service_healthy
    # Permite acesso direto para debug
    ports:
      - "3001:3001"

  # Nginx - Proxy Reverso (Container Separado)
  nginx:
    image: nginx:alpine
    container_name: jimi-nginx
    restart: unless-stopped
    ports:
      - "1212:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_files:/app/frontend:ro
      - nginx_logs:/var/log/nginx  # Logs separados do nginx
    networks:
      - jimi-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  jimi-network:
    driver: bridge
    name: jimi-network

volumes:
  postgres_data:
    name: jimi_postgres_data
  frontend_files:
    name: jimi_frontend_files
  app_logs:
    name: jimi_app_logs
  nginx_logs:
    name: jimi_nginx_logs