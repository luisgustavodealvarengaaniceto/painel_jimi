# Dockerfile Ultra Simples - Funciona Sempre
FROM node:20

WORKDIR /app

# Copiar arquivos de dependências
COPY package*.json ./
COPY backend/package*.json ./backend/

# Instalar dependências do frontend
RUN npm ci --omit=dev && npm cache clean --force

# Instalar dependências do backend
WORKDIR /app/backend
RUN npm ci --omit=dev && npm cache clean --force

# Voltar para raiz
WORKDIR /app

# Copiar código fonte
COPY . .

# Build do frontend
RUN npm run build

# Build do backend
WORKDIR /app/backend
RUN npm run build

# Criar diretórios
RUN mkdir -p /app/uploads /app/frontend

# Copiar frontend buildado
RUN cp -r /app/dist/* /app/frontend/ 2>/dev/null || true

# Script simples e direto
RUN echo '#!/bin/bash\n\
set -e\n\
echo "🚀 JIMI IOT BRASIL - Iniciando..."\n\
\n\
# Aguardar PostgreSQL\n\
echo "⏳ Aguardando PostgreSQL..."\n\
for i in {1..30}; do\n\
    if command -v pg_isready >/dev/null && pg_isready -h postgres -p 5432 -U painel_user; then\n\
        echo "✅ PostgreSQL pronto!"\n\
        break\n\
    fi\n\
    echo "Tentativa $i/30..."\n\
    sleep 2\n\
done\n\
\n\
cd /app/backend\n\
\n\
# Instalar e gerar Prisma\n\
echo "🔧 Configurando Prisma..."\n\
npm install @prisma/client || echo "Prisma já instalado"\n\
npx prisma generate --schema=./prisma/schema.prisma || echo "Erro no generate, continuando..."\n\
\n\
# Migrações\n\
echo "📊 Aplicando migrações..."\n\
npx prisma db push --accept-data-loss --schema=./prisma/schema.prisma || echo "Erro nas migrações, continuando..."\n\
\n\
# Configurar frontend\n\
if [ ! -f "/app/frontend/index.html" ]; then\n\
    cp -r /app/dist/* /app/frontend/ 2>/dev/null || echo "Frontend já configurado"\n\
fi\n\
\n\
echo "🎉 Iniciando servidor..."\n\
exec node dist/app.js' > /start.sh && chmod +x /start.sh

# Expor porta
EXPOSE 3001

# Comando simples
CMD ["/start.sh"]